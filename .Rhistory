plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy))
mpg_summary <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')
plt <- ggplot(mpg,aes(x=class)) #import dataset into ggplot2
install.packages("ggplot2",dependencies=TRUE)
quit()
plt <- ggplot(mpg,aes(x=class)) #import dataset into ggplot2
r
R
q()
plt <- ggplot(mpg,aes(x=class)) #import dataset into ggplot2
install.packages("tidyverse")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library(tidyverse)
plt <- ggplot(mpg,aes(x=class)) #import dataset into ggplot2
plt + geom_bar() #plot a bar plot
mpg_summary <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary tabl
plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy)) #import dataset into ggplot2
plt + geom_line()
View(mpg_summary)
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks = c(15:30)) #add line plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty)) #import dataset into ggplot2
plt + geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency (MPG)") #add scatter plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class)) #import dataset into ggplot2
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class") #add scatter plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class,shape=drv)) #import dataset into ggplot2
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class",shape="Type of Drive") #add scatter plot with multiple aesthetics
view <- mgp
view <- mpg
mpg.head
mpg head()
mpg.head()
head(mpg)
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class,shape=drv,size=cty))
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class",shape="Type of Drive",size="City MPG")
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class",shape="Type of Drive",size="City MPG")
plt <- ggplot(mpg,aes(y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() #add boxplot
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis labels 45 degrees
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy,color=red,fill=light yellow)) #import dataset into ggplot2
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy,color=red,fill=yellow)) #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis labels 45 degrees
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy,color='red',fill='yellow')) #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis labels 45 degrees
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy,color='red',fill='white')) #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis labels 45 degrees
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy,,color='red') #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis labels 45 degrees
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy,fill="white",color='red') #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis labels 45 degrees
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy,fill='white',color='red') #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis labels 45 degrees
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy,color='red',fill='white')) #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis labels 45 degrees
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy,fill='red',color='white')) #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis labels 45 degrees
plt + geom_boxplot(fill='red',color='white') + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis labels 45 degrees
plt + geom_boxplot(fill='yellow',color='red') + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis labels 45 degrees
plt + geom_boxplot(fill='yellow',color='red',linetype=dotted) + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis labels 45 degrees
plt + geom_boxplot(fill='yellow',color='red',linetype="dotted") + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis labels 45 degrees
ggplot(mtcars,aes(x=wt)) + geom_density() #visualize distribution using density plot
shapiro.test(mtcars$wt)
# Read in provided MechaCar_mpg.csv file
Mecha_mpg <- read.csv(file="Resources/MechaCar_mpg.csv")
#create multiple linear regression
lm(mpg ~ ground_clearance + vehicle_length + vehicle_weight + spoiler_angle + AWD, data = Mecha_mpg)
#view summary of linear regression
summary(lm(mpg ~ ground_clearance + vehicle_length + vehicle_weight + spoiler_angle + AWD, data = Mecha_mpg))
# Read in provided Suspension_Coil.csv file
Mecha_coil <- read.csv(file="Resources/Suspension_Coil.csv")
#create total summary df for all of Mecha_Coil data
total_summary<-Mecha_coil %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
print (total_summary)
#create Lot_coil df for Mecha_Coil date grouped by lot
Lot_coil <-group_by(Mecha_coil,Manufacturing_Lot)
lot_summary<-Lot_coil %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
print(lot_summary)
# t.test all manufacturing lots in total to determine if psi is statistically different from population mean of 1500 psi
t.test(Mecha_coil$PSI,mu=1500,paired = FALSE)
#Create sample of lot1
lot_1 <- subset(Mecha_coil, Manufacturing_Lot == "Lot1")
# t.test lot_1 sample to determine if psi is statistically different from population mean of 1500 psi
t.test(lot_1$PSI,mu=1500,paired = FALSE)
#Create sample of lot2
lot_2 <- subset(Mecha_coil, Manufacturing_Lot == "Lot2")
# t.test lot_2 sample to determine if psi is statistically different from population mean of 1500 psi
t.test(lot_2$PSI,mu=1500,paired = FALSE)
#Create sample of lot3
lot_3 <- subset(Mecha_coil, Manufacturing_Lot == "Lot3")
# t.test lot_3 sample to determine if psi is statistically different from population mean of 1500 psi
t.test(lot_3$PSI,mu=1500,paired = FALSE)
Mecha_mpg <- read.csv(file="Resources/MechaCar_mpg.csv")
Mecha_mpg <- read.csv(file="Resources/MechaCar_mpg.csv")
#create multiple linear regression
lm(mpg ~ ground_clearance + vehicle_length + vehicle_weight + spoiler_angle + AWD, data = Mecha_mpg)
#view summary of linear regression
summary(lm(mpg ~ ground_clearance + vehicle_length + vehicle_weight + spoiler_angle + AWD, data = Mecha_mpg))
# Read in provided Suspension_Coil.csv file
Mecha_coil <- read.csv(file="Resources/Suspension_Coil.csv")
#create total summary df for all of Mecha_Coil data
total_summary<-Mecha_coil %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
print (total_summary)
#create Lot_coil df for Mecha_Coil date grouped by lot
Lot_coil <-group_by(Mecha_coil,Manufacturing_Lot)
lot_summary<-Lot_coil %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
print(lot_summary)
# t.test all manufacturing lots in total to determine if psi is statistically different from population mean of 1500 psi
t.test(Mecha_coil$PSI,mu=1500,paired = FALSE)
#Create sample of lot1
lot_1 <- subset(Mecha_coil, Manufacturing_Lot == "Lot1")
# t.test lot_1 sample to determine if psi is statistically different from population mean of 1500 psi
t.test(lot_1$PSI,mu=1500,paired = FALSE)
#Create sample of lot2
lot_2 <- subset(Mecha_coil, Manufacturing_Lot == "Lot2")
# t.test lot_2 sample to determine if psi is statistically different from population mean of 1500 psi
t.test(lot_2$PSI,mu=1500,paired = FALSE)
#Create sample of lot3
lot_3 <- subset(Mecha_coil, Manufacturing_Lot == "Lot3")
# t.test lot_3 sample to determine if psi is statistically different from population mean of 1500 psi
t.test(lot_3$PSI,mu=1500,paired = FALSE)
Mecha_mpg <- read.csv(file="Resources/MechaCar_mpg.csv")
setwd("C:/Users/erict/OneDrive/Desktop/git/HW15_MechaCar_Statistical_Analysis")
Mecha_mpg <- read.csv(file="Resources/MechaCar_mpg.csv")
#create multiple linear regression
lm(mpg ~ ground_clearance + vehicle_length + vehicle_weight + spoiler_angle + AWD, data = Mecha_mpg)
#view summary of linear regression
summary(lm(mpg ~ ground_clearance + vehicle_length + vehicle_weight + spoiler_angle + AWD, data = Mecha_mpg))
?lm()
# Read in provided Suspension_Coil.csv file
Mecha_coil <- read.csv(file="Resources/Suspension_Coil.csv")
#create total summary df for all of Mecha_Coil data
total_summary<-Mecha_coil %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
print (total_summary)
# Read in provided Suspension_Coil.csv file
Mecha_coil <- read.csv(file="Resources/Suspension_Coil.csv")
#create total summary df for all of Mecha_Coil data
total_summary<-Mecha_coil %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
library(dplyr)
# Read in provided MechaCar_mpg.csv file
Mecha_mpg <- read.csv(file="Resources/MechaCar_mpg.csv")
#create multiple linear regression
lm(mpg ~ ground_clearance + vehicle_length + vehicle_weight + spoiler_angle + AWD, data = Mecha_mpg)
# Read in provided Suspension_Coil.csv file
Mecha_coil <- read.csv(file="Resources/Suspension_Coil.csv")
#create total summary df for all of Mecha_Coil data
total_summary<-Mecha_coil %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
print (total_summary)
#load dplyr library
library(dplyr)
# Read in provided MechaCar_mpg.csv file
Mecha_mpg <- read.csv(file="Resources/MechaCar_mpg.csv")
#create multiple linear regression
lm(mpg ~ ground_clearance + vehicle_length + vehicle_weight + spoiler_angle + AWD, data = Mecha_mpg)
#view summary of linear regression
summary(lm(mpg ~ ground_clearance + vehicle_length + vehicle_weight + spoiler_angle + AWD, data = Mecha_mpg))
# Read in provided Suspension_Coil.csv file
Mecha_coil <- read.csv(file="Resources/Suspension_Coil.csv")
#create total summary df for all of Mecha_Coil data
total_summary<-Mecha_coil %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
print (total_summary)
#create Lot_coil df for Mecha_Coil date grouped by lot
Lot_coil <-group_by(Mecha_coil,Manufacturing_Lot)
lot_summary<-Lot_coil %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
print(lot_summary)
# t.test all manufacturing lots in total to determine if psi is statistically different from population mean of 1500 psi
t.test(Mecha_coil$PSI,mu=1500,paired = FALSE)
#Create sample of lot1
lot_1 <- subset(Mecha_coil, Manufacturing_Lot == "Lot1")
# t.test lot_1 sample to determine if psi is statistically different from population mean of 1500 psi
t.test(lot_1$PSI,mu=1500,paired = FALSE)
#Create sample of lot2
lot_2 <- subset(Mecha_coil, Manufacturing_Lot == "Lot2")
# t.test lot_2 sample to determine if psi is statistically different from population mean of 1500 psi
t.test(lot_2$PSI,mu=1500,paired = FALSE)
#Create sample of lot3
lot_3 <- subset(Mecha_coil, Manufacturing_Lot == "Lot3")
# t.test lot_3 sample to determine if psi is statistically different from population mean of 1500 psi
t.test(lot_3$PSI,mu=1500,paired = FALSE)
?t.test
t.test(lot_3$PSI,mu=1500,paired = TRUE)
t.test(lot_3$PSI,mu=1500,paired = FALSE)
View(lot_1)
View(lot_1)
t.test(lot_3$PSI,mu=1500,alt="one.sided",paired = FALSE)
t.test(lot_3$PSI,mu=1500,paired = FALSE)
